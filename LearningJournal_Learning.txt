Learning Learning Journal

Professional vs. Beginner
Most commonly developers will need to know the tools and frameworks available to them and when to apply them.  Staying up to date with the latest technology is important to keep up with security and tools that help reduce development time.  I find writing clean and maintainable code is critical in reducing bugs and making future changes easier to implement.  Depending on if you are doing web development or the application backend, you will also need to be aware of the consumers of you work.  For websites they are the end users and internal applications could be the sites themselves.  Both require considerations to make sure the applications are responsive and easy to use and follow best practices to maintain stability.  Outside of the development it also beneficial to be able to help teammates with troubleshooting and sharing technological skills to solve the ever changing demands of the sites and applications.

There are couple different reasons why want to track our learning progress.
    We can go back and revise learned things
    See what type of learning works best for us
    Develop growth mindset
    Document the learning process for others
    We don't waste time trying to learn something all over against

The way I track my learning progress here is by keeping a earning journal. Besides that, there are also other methods of keeping track of learning:
    verbal
    hand-written
    electronic diary
        document
        web sites

Which one we decide to use will depend on couple of factors, one of which are our goals, our methods, the reason for learning, etc.

For each learning journal assignment, I will write down 5 things without referring the journal, 5 things with a journal, and 5 new things that I'm aware of that I can learn. Also, I will write how the coding practice might differ between professionals and beginners.

When we try to focus our learning, there are couple of things that can guide our focus during learning. Type of learning can depend on:
    Whether we're trying to memorize the content
    Learn a rule
    Make a habit
    etc.

Another step is also learning about and how to use technology. We can either figure it out ourselves or we can rely on experts. Which one we choose will depend on difficulty, correctness, or durability. Sometimes, the importance of learning will require of us to find an expert. There are couple ways how to find an expert.

Bloom's taxonomy - https://en.wikipedia.org/wiki/Bloom%27s_taxonomy
Learning objectives can be classified in hierarchical model, called Bloom's taxonomy. It starts with the most basic and moves on to the more complicated. The levels are:
    Knowledge - involves recognizing or remembering facts, terms, basic concepts, or answers without necessarily understanding what they mean.
    Comprehension - involves demonstrating an understanding of facts and ideas by organizing, summarizing, translating, generalizing, giving descriptions, and stating the main ideas.
    Application - Application involves using acquired knowledge to solve problems in new situations. This involves applying acquired knowledge, facts, techniques and rules.
    Analysis - Analysis involves examining and breaking information into component parts, determining how the parts relate to one another, identifying motives or causes, making inferences, and finding evidence to support generalizations.
    Synthesis - Synthesis involves building a structure or pattern from diverse elements; it also refers to the act of putting parts together to form a whole or bringing pieces of information together to form a new meaning.
    Evaluation - Evaluation involves presenting and defending opinions by making judgments about information, the validity of ideas, or quality of work based on a set of criteria.

    This can be put as: receiving, responding, valuing, organizing, and characterizing.

There are different scenarios why we might be learning. Knowing why we are learning will help us decide whether we need an experts help or not. We can decide that based on how costly the mistake can be, how likely are we to make a mistake, or how easy it is to find an expert. Knowing scenarios for the lesson will help us decide what to learn.
Some scenarios are (We can imply Bloom's taxonomy on these scenarios.):
    solve a syntax level issue - knowledge
    find a method to make me more productive about a specific thing - comprehension/application
    find a specific question - knowledge/comprehension
    develop a new skill - application
    learn about a new technology if it's appropriate - comprehension/application/analysis
    required to learn by your manager - depending on request
    find a different job - depending on a job
    pass certification exam - depending on the exam, but around application
    learn because you want to know -  depending on us

We can use what we learned in different ways, such as being able to accomplish task or decide what technology to use.
    When deciding on what technology to use, there are steps:
        learn just enough to understand the general concept
        identify our needs
        learn about each option in terms of our needs
In order to accomplish a task, we need to do couple of steps:
    test concept in a plain environment
    integrate - both in code and in a journal
    learn how to implement new knowledge with a demo project
    come up with a simple project
    determine the differences between two
    get your project to work in a simple environment
    get a simple project to work in a work environment
    move your project
    create another "project" to make sure it can be repeated

There are couple ways how to make learning usable
    don't want to learn when applying
    differentiate between knowledge used every day and knowledge used only every so often
    It's important to know if the environment can give me what I need
    Be careful with complex answers

Sharing what you learned
    Categories:
        How to do something new? (paper)
        How to improve something already done? (paper)
        A comparison (paper)
        A proof of concept (program)
        An overview of a topic (paper)
    We can do this on either paper or software (it will depend on type of learning, type of content, context, etc.). Paper alone can be sufficient for some cases, while software is rarely sufficient alone.
    Example of a paper outline:
        Primary purpose: explain what has been learned.
        Background knowledge for the reader.
        Background knowledge for the project.
        Overview of project/software
        Things learned
        Conclusion
    
    Different ways to follow what is happening:
        Learning journals
        Learning Tasks
        Walkthrough
        Exams

    There will be possibilities of learning more than what is necessary needed. There are reasons to both spend time on it and not.
    In deciding to do that, we need to consider what effort is involved, is it worth the effort?
    Steps in learning something that might not be necessary:
        Identifying something that has potential
        Evaluate the potential to decide if it is worth it
        Learn it
    What has potential?
        What you might need in the future?
        What you might need for something else?
        Something interesting
        New to us
        Fundamental
    Evaluate
        How much time it takes?
        How much time do I have?
        Will I have time later?
        How likely it is to be useful?
        How quickly is it to be useful?
        How useful?
        How hard would it be to find it again if I didn't learn it now?
    Learn it
        Record location for later use (location, area of knowledge)
        Record knowledge (keep a journal)
        Read for more detailed understanding
            apply it
            develop a project
            teach somebody
    
    Productive learning
        Achieving or producing a significant amount or result
        Profitable - cost/benefit ration (low)
        Learning the "most" with the least effort
        It's the opposite of wasteful. Examples of wasteful learning:
            Forgetting
            Re-learning again
            Learning wrong things
        Goal:
            Get what you want
            Ignore what is not wanted
        Wasteful activities:
            Learn the "wrong items"
            Having to re-learn
            Not learning anything
            Being distracted
        How to avoid:
            Determine what you want to know
            Track
            Evaluate in terms of what you want to know
            Track important locations of where you have learned things
            Refer back to goals often
            Ask yourself if this is helping
            Quiz yourself
            Reword what you have learned
                Apply it to new situations
        If something else occurs:
            Write down and move on
            Set a limit on effort and spend some time on it
                Summarize what was learned
                Record locations/etc.
                Go back to task
                